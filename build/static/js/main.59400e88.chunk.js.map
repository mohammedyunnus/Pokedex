{"version":3,"sources":["components/PokeDetails.js","components/themeredux/actions/index.js","components/themeredux/actions/actionsTypes.js","components/Header.js","App.js","components/themeredux/themes/index.js","components/themeredux/reducers/Theme.js","components/themeredux/reducers/index.js","components/themeredux/store/index.js","index.js"],"names":["PokeDetails","match","useEffect","a","console","log","fetch","params","id","fetchDetail","json","pokeinfo","Array","Math","max","String","length","join","allmoves","moves","slice","map","mo","move","name","allstat","stats","m","stat","base_stat","alltypes","types","t","type","image","abl","abilities","ability","SpeciesUrl","species","url","speciesData","alltext","flavor_text_entries","filter","ele","language","flavor_text","onlygrowth","growth_rate","onlyhabitat","habitat","TypeUrl","typeData","allDoubleDamage","i","damage_relations","double_damage_from","push","allDoubleDamageTo","double_damage_to","allgeneration","generation","setDetail","weight","height","capture","capture_rate","useState","Detail","className","src","alt","key","toString","damage","strong","toUpperCase","percent","strokeWidth","strokeColor","trailColor","toggleTheme","theme","payload","Header","useSelector","state","themems","theme_option","dispatch","useDispatch","checked","setChecked","style","onChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","PokemonList","lazy","App","fallback","color","display","justifyContent","path","exact","component","glbstyle","themes","dark","backgroundColor","light","initialState","colorData","theme_options","Theme","action","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59400e88.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Line, Circle } from 'rc-progress';\r\n\r\nfunction PokeDetails({ match }) {\r\n  useEffect(() => {\r\n    const fetchDetail = async () => {\r\n      console.log(match);\r\n      const fetchDetail = await fetch(\r\n        `https://pokeapi.co/api/v2/pokemon/${match.params.id}`\r\n      );\r\n      const pokeinfo = await fetchDetail.json();\r\n\r\n      let id =\r\n        Array(Math.max(3 - String(match.params.id).length + 1, 0)).join(0) +\r\n        match.params.id;\r\n      let allmoves = pokeinfo.moves.slice(0, 5).map((mo) => mo.move.name);\r\n\r\n      let allstat = pokeinfo.stats.map((m) => {\r\n        let processed_obj = { name: m.stat.name, base_stat: m.base_stat };\r\n        return processed_obj;\r\n      });\r\n      //   let allbasestats = pokeinfo.stats.map(m => m.base_stat);\r\n\r\n      let alltypes = pokeinfo.types.map((t) => t.type.name);\r\n      let image = `https://github.com/ZeChrales/PogoAssets/blob/master/pokemon_icons/pokemon_icon_${id}_00.png?raw=true`;\r\n      let abl = pokeinfo.abilities.map((a) => a.ability.name);\r\n\r\n      let SpeciesUrl = pokeinfo.species.url;\r\n      let speciesData = await fetch(SpeciesUrl);\r\n      speciesData = await speciesData.json();\r\n      console.log({ speciesData });\r\n\r\n      let alltext = speciesData.flavor_text_entries.filter(\r\n        (ele) => ele.language.name === \"en\"\r\n      )[0].flavor_text;\r\n      //   console.log(\"kama\", alltext);\r\n      let onlygrowth = speciesData.growth_rate.name;\r\n      //   console.log(onlygrowth);\r\n      let onlyhabitat =\r\n        speciesData.habitat != null && speciesData.habitat.length > 0\r\n          ? speciesData.habitat.name\r\n          : null;\r\n\r\n      let TypeUrl =\r\n        pokeinfo.types.length > 0 ? pokeinfo.types[0].type.url : null;\r\n      let typeData = await fetch(TypeUrl);\r\n      typeData = await typeData.json();\r\n      console.log({ typeData });\r\n\r\n      //   if (pokeinfo.types.length > 0) {\r\n      //     for (let i = 0; i < 1; i++) {\r\n      //       TypeUrl= pokeinfo.types[i].type.url;\r\n      //     }\r\n      //   }\r\n      // let typeData= await TypeUrl.json();\r\n      //       let TypeUrl= pokeinfo.types[];\r\n      //  console.log(\"asd\",TypeUrl);\r\n\r\n      let allDoubleDamage = [];\r\n      // typeData.damage_relations.map(da=>da.double_damage_from.name);\r\n      for (\r\n        let i = 0;\r\n        i < typeData.damage_relations.double_damage_from.length;\r\n        i++\r\n      ) {\r\n        allDoubleDamage.push(\r\n          typeData.damage_relations.double_damage_from[i].name\r\n        );\r\n        // console.log(allDoubleDamage);\r\n      }\r\n      let allDoubleDamageTo = [];\r\n      // typeData.damage_relations.map(da=>da.double_damage_from.name);\r\n      for (\r\n        let i = 0;\r\n        i < typeData.damage_relations.double_damage_to.length;\r\n        i++\r\n      ) {\r\n        allDoubleDamageTo.push(\r\n          typeData.damage_relations.double_damage_to[i].name\r\n        );\r\n        // console.log(allDoubleDamageTo);\r\n      }\r\n      let allgeneration = speciesData.generation.name;\r\n\r\n      setDetail({\r\n        moves: allmoves,\r\n        types: alltypes,\r\n        image,\r\n        weight: pokeinfo.weight,\r\n        // stat: allbasestats,\r\n        height: pokeinfo.height,\r\n        stats: allstat,\r\n        name: pokeinfo.name,\r\n        abilities: abl,\r\n        capture: speciesData.capture_rate,\r\n        flavor_text: alltext,\r\n        growth_rate: onlygrowth,\r\n        habitat: onlyhabitat,\r\n        double_damage_from: allDoubleDamage,\r\n        double_damage_to: allDoubleDamageTo,\r\n        generation: allgeneration,\r\n      });\r\n\r\n      console.log(\"finaldetail\", pokeinfo);\r\n    };\r\n\r\n    fetchDetail();\r\n    // console.log(\"deatils\",match);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [Detail, setDetail] = useState({\r\n    moves: [],\r\n    types: [],\r\n    image: \"\",\r\n    weight: null,\r\n    height: null,\r\n    stats: [],\r\n    // stat: [],\r\n    name: null,\r\n    abilities: [],\r\n    capture: null,\r\n    flavor_text: [],\r\n    growth_rate: null,\r\n    // habitat: null,\r\n    double_damage_from: [],\r\n    double_damage_to: [],\r\n    generation: null,\r\n  });\r\n  console.log(\"klfsldajdls\", Detail);\r\n  return (\r\n    <div className=\"PokeContainerName\">\r\n      <div className=\"PokeHeading\">\r\n        <h1>{Detail.name}</h1>\r\n      </div>\r\n\r\n      <div className=\"PokeContainer1\">\r\n        <div className=\"Pokeimg\">\r\n          <img src={Detail.image} alt=\"failed\" />\r\n        </div>\r\n        <div className=\"PokeText\">\r\n          <p>{Detail.flavor_text}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"PokeContainer2\">\r\n        <div className=\"Pokesize\">\r\n          <div>\r\n           \r\n            <p>Weight: {Detail.weight} lbs</p>\r\n            <p>Height: {Detail.height}\"</p>\r\n            <p>capture Rate: {Detail.capture}%</p>\r\n            <p>habitat: {Detail.habitat}</p>\r\n            <p>Growth-rate: {Detail.growth_rate}</p>\r\n            <p>generation Type: {Detail.generation}</p>\r\n            <p>\r\n              abilities:\r\n              {Detail.abilities.map((ability) => {\r\n                return <span key={ability.toString()}>{ability}</span>;\r\n              })}\r\n            </p>\r\n          </div>\r\n        \r\n        </div>\r\n        <div className=\"Pokeway\">\r\n          Types\r\n          {Detail.types.map((type) => {\r\n            return <h4 key={type.toString()}>{type}</h4>;\r\n          })}\r\n          Weakness\r\n          {Detail.double_damage_from.map((damage) => {\r\n            return <p key={damage.toString()}>{damage}</p>;\r\n          })}\r\n          strong against\r\n          {Detail.double_damage_to.map((strong) => {\r\n            return <p key={strong.toString()}>{strong}</p>;\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"PokeContainer3\">\r\n        STATES\r\n        {Detail.stats.map((stat) => {\r\n          // return <h4 key={stat.name}>{stat.name + \"  \" + stat.base_stat}</h4>;\r\n        return <h5  key={stat.name}>{stat.name.toUpperCase()}  <span ><Line percent={stat.base_stat} strokeWidth=\"1\" strokeColor=\"#60C6F6\" trailColor=\"#fff\"\t /></span></h5>;\r\n        })}\r\n      </div>\r\n       </div>\r\n  );\r\n}\r\n\r\nexport default PokeDetails;\r\n// eslint-disable-next-line\r\n{\r\n  /* <div  className=\"Pokemov\">\r\n<p >Current Moves:{Detail.moves.map((move,index) =>{\r\n    return <p>{move}</p>\r\n})}</p>\r\n</div> */\r\n}\r\n// eslint-disable-next-line\r\n{\r\n  /* <p>\r\n          States\r\n          {Detail.stat.map((base_stat, index) => {\r\n            return <h4>{base_stat}</h4>;\r\n          })}\r\n        </p> */\r\n}\r\n","import Toggle_Theme from \"./actionsTypes\";\r\n\r\nfunction toggleTheme(theme) {\r\n  let objtheme = {\r\n    type: Toggle_Theme,\r\n    payload: theme,\r\n   \r\n  };\r\n\r\n  return objtheme;\r\n}\r\n\r\nexport default toggleTheme;\r\n","\r\nconst Toggle_Theme=\"Toggle_Theme\";\r\n\r\nexport default Toggle_Theme;\r\n\r\n","import React from \"react\";\r\nimport {useSelector , useDispatch} from \"react-redux\";\r\nimport toggleTheme from \"./themeredux/actions\"\r\n import Switch from \"react-switch\";\r\n import  { useState } from 'react';\r\n // import {ThemeContext} from '../components/theme-context';\r\n\r\n// class Header extends React.Component{\r\nfunction Header(){ \r\nconst theme = useSelector (state =>state.themems)\r\n// const checked = useSelector(state=>state.isChecked)\r\n\r\nif(theme.name === \"dark\")\r\n{\r\n    \r\n    var theme_option = \"light\";\r\n}\r\nelse\r\n{\r\n     theme_option = \"dark\";\r\n}\r\n\r\n\r\n\r\n\r\nconst dispatch=useDispatch();\r\nconst [checked, setChecked] = useState(false);     \r\nreturn(\r\n\r\n            <header className=\"Header \" style={theme}>\r\n            <p>PokeDex  </p>\r\n\r\n<Switch \r\n            className=\"bu\"\r\n             type=\"button\"\r\n             onChange={() => \r\n                \r\n                {\r\n                    setChecked(!checked)\r\n                    dispatch(toggleTheme(theme_option))\r\n                }\r\n            \r\n            }\r\n            //  checked={()=>dispatch(lastChecked)}\r\n            checked={checked} \r\n            onColor=\"#86d3ff\"\r\n             onHandleColor=\"#2693e6\"\r\n             handleDiameter={15}\r\n             uncheckedIcon={true}\r\n             checkedIcon={true}\r\n            //  height={20}\r\n            //  width={45}\r\n           \r\n              /> \r\n      </header>\r\n        )\r\n    }\r\n// }\r\n\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\n import {BrowserRouter as Router, Route }from \"react-router-dom\";\r\n\r\nimport PokeDetails from \"./components/PokeDetails\";\r\nimport {useSelector } from \"react-redux\";\r\n\r\nimport Header from \"./components/Header\";\r\n// import PokemonList from \"./components/PokemonList\"\r\n\r\nimport { Suspense } from \"react\";\r\nimport {lazy} from \"react\";\r\n// eslint-disable-next-line \r\nconst PokemonList = lazy(()=> import(\"./components/PokemonList\"));\r\n\r\n\r\n\r\n  function App() {\r\n    const theme = useSelector (state =>state.themems)\r\n   return(\r\n     \r\n       \r\n    <div style={theme}> \r\n      <Header   />\r\n<Router>\r\n <Suspense fallback={<h3 style={{color:\"white\",display:\"flex\",justifyContent:\"center\"}}>Loading...</h3>}> \r\n<Route path=\"/pokedex\" exact component={PokemonList} glbstyle={theme}  />\r\n</Suspense>\r\n<Route path=\"/Info/:id\"component={PokeDetails} glbstyle={theme}  />\r\n\r\n</Router>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","const themes = {\r\n    dark: {\r\n      backgroundColor: '#232B2B',\r\n      color: 'white',\r\n      name:\"dark\"\r\n    },\r\n      light: {\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        name:\"light\"\r\n      }\r\n    }\r\n\r\nexport default themes;\r\n","import themes from \"../themes\";\r\n\r\nconst initialState = {\r\n  colorData: themes.dark,\r\n \r\n};\r\nconst theme_options = {\r\n  dark: themes.dark,\r\n  light: themes.light\r\n};\r\n\r\nfunction Theme(state = initialState, action, theme_option = theme_options) {\r\n\r\n\r\n  // console.log(\"F.U\")  \r\n  // console.log(state,action,theme_option);\r\n  switch (action.type) \r\n  {\r\n    case \"Toggle_Theme\":\r\n      switch (action.payload) {\r\n        case \"dark\":\r\n          // console.log(\"lol\");\r\n          return theme_option.dark;\r\n        case \"light\":\r\n          // console.log(\"lol\");\r\n          return theme_option.light;\r\n        default:\r\n          return theme_option.dark;  \r\n      }\r\n      // eslint-disable-next-line \r\n      break;\r\n    default:\r\n      return state.colorData;\r\n  }\r\n}\r\nexport default Theme;\r\n","import {combineReducers} from 'redux';\r\nimport  Theme from \"./Theme\";\r\n\r\n const allReducers=combineReducers({\r\n      themems:Theme,\r\n     \r\n});\r\n\r\nexport default allReducers;\r\n\r\n\r\n","import {createStore} from  \"redux\";\r\nimport allReducers from \"../reducers\";\r\n\r\n\r\nconst store=createStore(allReducers\r\n    ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\nexport default   store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport store from \"./components/themeredux/store\"\r\n// import { ThemeProvider } from './components/theme-context'\r\nconsole.log(\"hell\")\r\nconsole.log(store)\r\n\r\nReactDOM.render(\r\n    // <ThemeProvider>\r\n    <Provider store={store}>\r\n<App  />\r\n  </Provider>\r\n// </ThemeProvider>\r\n, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}